// <auto-generated />
using System;
using EconoMe_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EconoMe_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240610175903_AddFirebaseUIDAndNomeCategoriaToTransacoes")]
    partial class AddFirebaseUIDAndNomeCategoriaToTransacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EconoMe_API.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("EconoMe_API.Models.Conta", b =>
                {
                    b.Property<int>("ContaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirebaseUID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InstituicaoBancariaID")
                        .HasColumnType("int");

                    b.Property<string>("NomeConta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ContaID");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("EconoMe_API.Models.InstituicaoBancaria", b =>
                {
                    b.Property<int>("InstituicaoBancariaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("InstituicaoBancariaID");

                    b.ToTable("InstituicoesBancarias");

                    b.HasData(
                        new
                        {
                            InstituicaoBancariaID = 1,
                            Nome = "Itau"
                        },
                        new
                        {
                            InstituicaoBancariaID = 2,
                            Nome = "Nubank"
                        },
                        new
                        {
                            InstituicaoBancariaID = 3,
                            Nome = "Banco do Brasil"
                        },
                        new
                        {
                            InstituicaoBancariaID = 4,
                            Nome = "Santander"
                        });
                });

            modelBuilder.Entity("EconoMe_API.Models.Transacao", b =>
                {
                    b.Property<int>("TransacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("ContaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirebaseUID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TransacaoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ContaID");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("EconoMe_API.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirebaseUID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EconoMe_API.Models.Transacao", b =>
                {
                    b.HasOne("EconoMe_API.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EconoMe_API.Models.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Conta");
                });
#pragma warning restore 612, 618
        }
    }
}
